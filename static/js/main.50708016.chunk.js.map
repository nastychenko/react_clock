{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","setInterval","setState","this","window","console","info","toUTCString","slice","prev","name","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","document","addEventListener","event","preventDefault","showTime","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,aAAY,WACV,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,SACzB,KAEHI,KAAKH,QAAUI,OAAOH,aAAY,WAEhCI,QAAQC,KAAK,EAAKT,MAAMC,KAAKS,cAAcC,OAAO,IAAK,MACtD,OAfP,gCAkBE,SAAmBC,GACjB,IAAQC,EAASP,KAAKQ,MAAdD,KAEJD,EAAKC,OAASA,GAEhBL,QAAQO,MAAR,uBAA8BH,EAAKC,KAAnC,eAA8CA,MAvBpD,kCA2BE,WACEG,cAAcV,KAAKH,WA5BvB,oBA+BE,WACE,IAAQF,EAASK,KAAKN,MAAdC,KACAY,EAASP,KAAKQ,MAAdD,KAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGhB,EAAKS,cAAcC,OAAO,IAAK,YA5C1C,GAA2BO,aCN3B,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWX,OAAO,GAE3C,MAAM,SAAN,OAAgBS,GAQX,IAAMG,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVC,UAAW,WAHf,EAMEtB,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,aAAY,WACV,EAAKC,SAAS,CAAEoB,UAAWN,QAC1B,MAEHO,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAEN,EAAKxB,SAAS,CAAEmB,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKtB,SAAS,CAAEmB,UAAU,SApBhC,oBAwBE,WACE,IAAkBM,EAAaxB,KAAKN,MAA5BwB,SAER,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCa,GAAY,cAAC,EAAD,CAAOjB,KAAMP,KAAKN,MAAMyB,mBA9B7C,GAAyBP,aCZzBa,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.50708016.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  date: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n\n    this.timerId = window.setInterval(() => {\n      // eslint-disable-next-line no-console\n      console.info(this.state.date.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prev: Props): void {\n    const { name } = this.props;\n\n    if (prev.name !== name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prev.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  render() {\n    const { hasClock: showTime } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {showTime && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}